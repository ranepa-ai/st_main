import streamlit as st
from streamlit_option_menu import option_menu
import pandas as pd
import plotly.express as px
from io import BytesIO
import requests
import base64




def main_page(df_search):
        
    st.header("–õ–∞–±–æ—Ä–∞—Ç–æ—Ä–∏—è —Ü–∏—Ñ—Ä–æ–≤—ã—Ö –∫–æ–º–ø–µ—Ç–µ–Ω—Ü–∏–π‚úîÔ∏è", divider='rainbow')
    st.subheader("–ó–¥–µ—Å—å –≤—ã –Ω–∞–π–¥–µ—Ç–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã, –∫–æ—Ç–æ—Ä—ã–µ –ø–æ–º–æ–≥—É—Ç –≤–∞–º –æ—Å–≤–æ–∏—Ç—å –Ω–∞–≤—ã–∫–∏ –∞–Ω–∞–ª–∏–∑–∞ –¥–∞–Ω–Ω—ã—Ö, –º–∞—à–∏–Ω–Ω–æ–≥–æ –æ–±—É—á–µ–Ω–∏—è –∏ –ò–ò, —Å—Ç–∞—Ç—å –≤–æ—Å—Ç—Ä–µ–±–æ–≤–∞–Ω–Ω—ã–º —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–æ–º –∏ –≤–æ–ø–ª–æ—Ç–∏—Ç—å –∏–¥–µ–∏ –≤ –∂–∏–∑–Ω—å")


    tab1, tab2, tab3 = st.tabs(["–ê–Ω–∞–ª–∏–∑ –¥–∞–Ω–Ω—ã—Öüòéüìä", "–ú–∞—à–∏–Ω–Ω–æ–µ –æ–±—É—á–µ–Ω–∏–µüöÄüíª", "–ì–ª—É–±–æ–∫–æ–µ –æ–±—É—á–µ–Ω–∏–µüß†ü§ñ"])

    data = {
        '–¢—Ä–µ–∫ 1': [
            '–ê–Ω–∞–ª–∏–∑ –¥–∞–Ω–Ω—ã—Ö',
            tab1, """–≠—Ç–æ—Ç —Ç—Ä–µ–∫ –≤–∫–ª—é—á–∞–µ—Ç –≤ —Å–µ–±—è —Ä–∞–∑–≤–µ—Ä–Ω—É—Ç—ã–π —Ä–∞–∑–¥–µ–ª–æ—á–Ω—ã–π –∞–Ω–∞–ª–∏–∑ –¥–∞–Ω–Ω—ã—Ö, –≥–¥–µ –≤—ã –æ—Å–≤–æ–∏—Ç–µ –º–µ—Ç–æ–¥—ã –≤–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏–∏ –∏ –∞–Ω–∞–ª–∏–∑–∞ –¥–∞–Ω–Ω—ã—Ö. 

–ò—Å–ø–æ–ª—å–∑—É—è —Ä–∞–∑–ª–∏—á–Ω—ã–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã, —Ç–∞–∫–∏–µ –∫–∞–∫ Matplotlib –∏ Seaborn, –∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å —Å—Ç—Ä—É–∫—Ç—É—Ä—É –∏ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏ –¥–∞–Ω–Ω—ã—Ö —Å—Ç–∞–Ω–µ—Ç –ø—Ä–æ—â–µ. 

–í—ã —Ç–∞–∫–∂–µ –Ω–∞—É—á–∏—Ç–µ—Å—å –ø—Ä–æ–≤–æ–¥–∏—Ç—å –ø—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω—É—é –æ–±—Ä–∞–±–æ—Ç–∫—É –¥–∞–Ω–Ω—ã—Ö –∏ –æ–±–Ω–∞—Ä—É–∂–∏–≤–∞—Ç—å –≤—ã–±—Ä–æ—Å—ã –∏ –æ—à–∏–±–∫–∏ –≤ –Ω–∏—Ö."""
        ],
        '–¢—Ä–µ–∫ 2': [
            '–ú–∞—à–∏–Ω–Ω–æ–µ –æ–±—É—á–µ–Ω–∏–µ',
            tab2, """–≠—Ç–æ—Ç —Ç—Ä–µ–∫ —Å—Ñ–æ–∫—É—Å–∏—Ä–æ–≤–∞–Ω –Ω–∞ –æ—Å–Ω–æ–≤–∞—Ö –º–∞—à–∏–Ω–Ω–æ–≥–æ –æ–±—É—á–µ–Ω–∏—è. 
            
–í—ã –∏–∑—É—á–∏—Ç–µ –ø–æ–Ω—è—Ç–∏—è, —Ç–∞–∫–∏–µ –∫–∞–∫ –æ–±—É—á–µ–Ω–∏–µ —Å —É—á–∏—Ç–µ–ª–µ–º –∏ –±–µ–∑ —É—á–∏—Ç–µ–ª—è, –∞ —Ç–∞–∫–∂–µ –∫–ª–∞—Å—Å–∏—Ñ–∏–∫–∞—Ü–∏—é –¥–∞–Ω–Ω—ã—Ö. 

–ü–æ–≥—Ä—É–∑–∏—Ç–µ—Å—å –≤ –∞–Ω–∞–ª–∏–∑ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –±–∏–∑–Ω–µ—Å–∞ –∏ –º–µ—Ç–æ–¥—ã –º–∞—à–∏–Ω–Ω–æ–≥–æ –æ–±—É—á–µ–Ω–∏—è, –ø—Ä–∏–º–µ–Ω—è–µ–º—ã–µ –≤ –∫–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω–æ–π —Å—Ä–µ–¥–µ.

–†–∞–∑—Ä–∞–±–æ—Ç–∞–π—Ç–µ –Ω–∞–≤—ã–∫–∏ –ø—Ä–∏–Ω—è—Ç–∏—è —Ä–µ—à–µ–Ω–∏–π –Ω–∞ –æ—Å–Ω–æ–≤–µ –¥–∞–Ω–Ω—ã—Ö –∏ –∏—Ö –ø—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –≤ –º–∞—Ä–∫–µ—Ç–∏–Ω–≥–µ."""
        ],
        '–¢—Ä–µ–∫ 3': [
            '–ì–ª—É–±–æ–∫–æ–µ –æ–±—É—á–µ–Ω–∏–µ (–ò–ò)',
            tab3, """–≠—Ç–æ—Ç —Ç—Ä–µ–∫ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–∏—Ç –≤–∞–º –±–∞–∑–æ–≤–æ–µ –ø–æ–Ω–∏–º–∞–Ω–∏–µ –∏—Å–∫—É—Å—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç–∞ –∏ –≥–ª—É–±–æ–∫–æ–≥–æ –æ–±—É—á–µ–Ω–∏—è.

–í—ã –∏–∑—É—á–∏—Ç–µ –æ—Å–Ω–æ–≤—ã –±–æ–ª—å—à–∏—Ö —è–∑—ã–∫–æ–≤—ã—Ö –º–æ–¥–µ–ª–µ–π, –≤–≤–µ–¥–µ–Ω–∏–µ –≤ chatgpt, –∞ —Ç–∞–∫–∂–µ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –∏—Å–∫—É—Å—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç–∞ –≤ –±–∏–∑–Ω–µ—Å–µ. 

–†–∞–±–æ—Ç–∞ —Å –µ—Å—Ç–µ—Å—Ç–≤–µ–Ω–Ω—ã–º —è–∑—ã–∫–æ–º, –∞–Ω–∞–ª–∏–∑ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–π –∏ –≤—ã–¥–µ–ª–µ–Ω–∏–µ —Ñ–∏—á–µ–π –¥–ª—è —É–ª—É—á—à–µ–Ω–∏—è –º–æ–¥–µ–ª–µ–π - –≤—Å–µ —ç—Ç–æ –±—É–¥–µ—Ç –≤ –≤–∞—à–µ–º —Ä–∞—Å–ø–æ—Ä—è–∂–µ–Ω–∏–∏."""
        ],
    }



    # –î–ª—è –∫–∞–∂–¥–æ–≥–æ —Ç—Ä–µ–∫–∞ —Å–æ–∑–¥–∞–µ–º —ç–∫—Å–ø–∞–Ω–¥–µ—Ä –∏ –æ—Ç–æ–±—Ä–∞–∂–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é
    for track, info in data.items():

        tab = info[1]
        description = info[0]
        info_capt = info[2]


        with tab:
            with st.expander(f"–û–ø–∏—Å–∞–Ω–∏–µ —Ç—Ä–µ–∫–∞‚§µÔ∏è"):
                st.write(info_capt)

            N_cards_per_row = 3
            df_sample = df_search[df_search.Track_main == description]

            track_old = df_sample['Track'].iloc[0]
            st.write("---")
            st.subheader(track_old)

            n_place = 0
            for track_plot in df_sample['Track'].unique().tolist():
                for n_row, row in df_sample[df_sample.Track==track_plot].iterrows():
            

                    if row['Track'] != track_old:
                        st.write("---")
                        st.subheader(row['Track'])
                        n_place = 0
                    track_old = row['Track']
            
                    i = n_place % N_cards_per_row
                    if i == 0 or row['Track'] != track_old:
                        cols = st.columns(N_cards_per_row, gap="large")
                        st.write("")
                    


                    # URL –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
                    image_cot = f'https://github.com/Chetoff1228/images/blob/main/{row["Picture"]}.png?raw=true'

                    with cols[n_place % N_cards_per_row]:
                    #  st.caption(f"–û–ø–∏—Å–∞–Ω–∏–µ, –ø–æ–ª—É—á–∞–µ–º—ã–µ —Å–∫–∏–ª—ã")
                        st.markdown(f"**{row['Name']}**")
                        #st.components.v1.html(clickable_image_html(row['Source'], image_cot), height=200)
                        st.markdown(f'<a href="{row["Source"]}"><img src="{image_cot}" alt="Foo" width="275" height="250"/></a>', unsafe_allow_html=True)

                        st.caption(f"**{row['Caption'].strip()}**")

                    n_place += 1
    st.write("---")